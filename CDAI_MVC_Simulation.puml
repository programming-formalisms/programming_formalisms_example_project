@startuml SimulationFactory
!theme spacelab

package simulation{

class SimulationController {
  +runSimulation(components: List<SimulationComponent>) : void
  +main():void
}

package simulation.model #CCDDDD{

Abstract SimulationComponent {
  +configure() : void
  +initialize() : void
  +update():SimulationComponent
  
}

class ParticleField {
  +configure() : void
  +initialize() : void
  +update() : ParticleField
}

class GravitationalInteraction {
  +configure() : void
  +initialize() : void
  +update() : GravitationalInteraction
}

class BoundaryCondition {
  +configure() : void
  +initialize() : void
  +update() : BoundaryCondition
}

class SimulationFactory {
  +createComponent(type: String) : SimulationComponent
}

class SettingsModule {
  +configureComponents(factory: SimulationFactory) : void
  +initializeComponents() : void
}
class Particle {
  -mass:number
  -position:Coorddinate
}
Class Coordinate{
 ~x:number
 ~y:number
}
}

package simulation.views #FFFFDD {
class SettingsView {
  +DisplaySettings(controler: SettingsModule) : void
  +UpdateSettings() : void
}

class SimulationView{
 +DisplaySimulation(component:: List<SimulationComponent>):void
 +StartSimulation(SimulationController:runSimulation()):void
 +UpdateSimulation():void
}
}

SimulationFactory ..> SimulationComponent: createComponent()
SimulationComponent <|-- ParticleField
SimulationComponent <|-- GravitationalInteraction
SimulationComponent <|-- BoundaryCondition
SimulationComponent <|-- Particle
Particle --* Coordinate


SimulationController ..> SettingsModule : Uses
SimulationController ..> SimulationComponent : Uses

SettingsView ..> SimulationController: Uses
SettingsModule ..> SimulationFactory : configureComponents()
SimulationView ..>SimulationController:Uses
SimulationView-->SettingsView: Associate

@enduml